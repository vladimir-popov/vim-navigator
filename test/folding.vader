Given vim (Vimscript as an example):
  " String with comment 
  function! s:Example()
    " inner function example
    fun Inner()
    endfunction
    " inner code example
    return s:InnerFunction()
  endfunction
    
Execute(Check the getting fold level):
  let navigator = g:NavigatorNew()
  let navigator.beginningOfSection = { str -> str =~# '\v^\s*fun' }
  let navigator.endOfSection = { str -> str =~# '\v^\s*endfunction' }

  let expectations = [
  \   { 'line': 1, 'foldlevel': 0 },
  \   { 'line': 2, 'foldlevel': 1 },
  \   { 'line': 3, 'foldlevel': 1 },
  \   { 'line': 4, 'foldlevel': 2 },
  \   { 'line': 5, 'foldlevel': 2 },
  \   { 'line': 6, 'foldlevel': 1 },
  \   { 'line': 7, 'foldlevel': 1 },
  \   { 'line': 8, 'foldlevel': 1 },
  \ ]
  let actual = []
  for i in range(1, len(expectations))
     call add(actual, { 'line': i, 'foldlevel': navigator.foldLevel(i) })
  endfor
  AssertEqual expectations, actual

Given(Yaml as an example):  
  Section1:
    Section2:
      Section3:
  Section4:    

Execute(Check the getting fold level):
  let navigator = g:NavigatorNew()
  let navigator.beginningOfSection = { str -> str =~# '\v^\s*\w+:' }
  let navigator.indentation = 2

  let expectations = [
  \   { 'line': 1, 'foldlevel': 1 },
  \   { 'line': 2, 'foldlevel': 2 },
  \   { 'line': 3, 'foldlevel': 3 },
  \   { 'line': 4, 'foldlevel': 1 },
  \ ]
  let actual = []
  for i in range(1, len(expectations))
     call add(actual, { 'line': i, 'foldlevel': navigator.foldLevel(i) })
  endfor
  AssertEqual expectations, actual
